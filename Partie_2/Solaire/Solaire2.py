import json
import pandas as pd

Departements = {
    'Ain':                          [46.099444444444444, 5.348888888888888],
    'Aisne':                        [49.559444444444445, 3.558333333333333],
    'Allier':                       [46.39361111111111, 3.188333333333333], 
    'Alpes-de-Haute-Provence':      [44.10611111111111, 6.243888888888889],
    'Hautes-Alpes':                 [44.66361111111111, 6.263055555555556],
    'Alpes-Maritimes':              [43.9375, 7.116388888888888],
    'Ardèche':                      [44.751666666666665, 4.424722222222223],
    'Ardennes':                     [49.61555555555556, 4.640833333333333],
    'Ariège':                       [42.920833333333334, 1.5038888888888888],
    'Aube':                         [48.30444444444444, 4.161666666666667],
    'Aude':                         [43.10333333333333, 2.4141666666666666],
    'Aveyron':                      [44.280277777777776, 2.679722222222222],
    'Bouches-du-Rhône':             [43.54333333333333, 5.086388888888888],
    'Calvados':                     [49.099722222222226, -0.3636111111111111],
    'Cantal':                       [45.051111111111105, 2.668611111111111],
    'Charente':                     [45.71805555555556, 0.2016666666666667],
    'Charente-Maritime':            [45.780833333333334, -0.6744444444444444],
    'Cher':                         [47.06472222222222, 2.491111111111111],
    'Corrèze':                      [45.356944444444444, 1.8769444444444445],
    'Corse-du-Sud':                 [41.86361111111111, 8.988055555555555],
    'Haute-Corse':                  [42.39416666666666, 9.206388888888888],
    "Côte-d'Or":                    [47.42472222222222, 4.772222222222222],
    "Côtes-d'Armor":                [48.441111111111105, -2.8641666666666667],
    'Creuse':                       [46.09027777777778, 2.0188888888888887],
    'Dordogne':                     [45.10416666666667, 0.7413888888888889],
    'Doubs':                        [47.165277777777774, 6.361666666666666],
    'Drôme':                        [44.68416666666666, 5.168055555555556],
    'Eure':                         [49.11361111111111, 0.9961111111111111],
    'Eure-et-Loir':                 [48.3875, 1.3702777777777777],
    'Finistère':                    [48.26111111111111, -4.058888888888888],
    'Gard':                         [43.99333333333333, 4.180277777777778],
    'Haute-Garonne':                [43.35861111111111, 1.172777777777778],
    'Gers':                         [43.69277777777778, 0.45333333333333337],
    'Gironde':                      [44.82527777777778, -0.5752777777777778],
    'Hérault':                      [43.57972222222222, 3.3672222222222223],
    'Ille-et-Vilaine':              [48.154444444444444, -1.638611111111111],
    'Indre':                        [46.77777777777778, 1.5758333333333334],
    'Indre-et-Loire':               [47.25805555555556, 0.6913888888888889],
    'Isère':                        [45.263333333333335, 5.576111111111111],
    'Jura':                         [46.72833333333333, 5.697777777777778],
    'Landes':                       [43.96555555555556, -0.7838888888888889],
    'Loir-et-Cher':                 [47.61666666666667, 1.4294444444444445],
    'Loire':                        [45.72694444444445, 4.1658333333333335],
    'Haute-Loire':                  [45.128055555555555, 3.806388888888889],
    'Loire-Atlantique':             [47.36138888888889, -1.682222222222222],
    'Loiret':                       [47.911944444444444, 2.3441666666666667],
    'Département Lot':              [44.62416666666667, 1.6047222222222224],
    'Lot-et-Garonne':               [44.3675, 0.4602777777777778],
    'Lozère':                       [44.51722222222222, 3.500277777777778],
    'Maine-et-Loire':               [47.39083333333333, -0.5641666666666667],
    'Manche':                       [49.07944444444445, -1.3275],
    'Marne':                        [48.94916666666666, 4.238611111111111],
    'Haute-Marne':                  [48.10944444444445, 5.226388888888889],
    'Mayenne':                      [48.14666666666667, -0.6580555555555556],
    'Meurthe-et-Moselle':           [48.786944444444444, 6.165],
    'Meuse':                        [48.989444444444445, 5.381666666666666],
    'Morbihan':                     [47.84638888888889, -2.8099999999999996],
    'Moselle':                      [49.03722222222222, 6.663333333333334],
    'Nièvre':                       [47.11527777777778, 3.504722222222222],
    'Nord':                         [50.447222222222216, 3.220555555555556],
    'Oise':                         [49.41027777777778, 2.4252777777777776],
    'Orne':                         [48.62361111111111, 0.1288888888888889],
    'Pas-de-Calais':                [50.493611111111115, 2.288611111111111],
    'Puy-de-Dôme':                  [45.725833333333334, 3.140833333333333],
    'Pyrénées-Atlantiques':         [43.25666666666667, -0.7613888888888889],
    'Hautes-Pyrénées':              [43.05305555555555, 0.1638888888888889],
    'Pyrénées-Orientales':          [42.6, 2.522222222222222],
    'Bas-Rhin':                     [48.670833333333334, 7.551388888888889],
    'Haut-Rhin':                    [47.85861111111111, 7.274166666666667],
    'Rhône':                        [45.87027777777778, 4.641388888888889],
    'Haute-Saône':                  [47.64111111111111, 6.086111111111111],
    'Saône-et-Loire':               [46.64472222222222, 4.542222222222222],
    'Sarthe':                       [47.99444444444445, 0.22222222222222224],
    'Savoie':                       [45.4775, 6.443611111111111],
    'Haute-Savoie':                 [46.03444444444444, 6.428055555555556],
    'Paris':                        [48.85666666666667, 2.3422222222222224],
    'Seine-Maritime':               [49.655, 1.0263888888888888],
    'Seine-et-Marne':               [48.626666666666665, 2.9333333333333336],
    'Yvelines':                     [48.815, 1.8416666666666668],
    'Deux-Sèvres':                  [46.55555555555555, -0.3172222222222222],
    'Somme':                        [49.95805555555556, 2.2777777777777777],
    'Tarn':                         [43.78527777777778, 2.166111111111111],
    'Tarn-et-Garonne':              [44.08583333333333, 1.2819444444444443],
    'Var':                          [43.46055555555556, 6.218055555555556],
    'Vaucluse':                     [43.99388888888889, 5.186111111111112],
    'Vendée':                       [46.67472222222222, -1.2977777777777777],
    'Vienne':                       [46.56388888888888, 0.4602777777777778],
    'Haute-Vienne':                 [45.891666666666666, 1.235277777777778],
    'Vosges':                       [48.196666666666665, 6.3805555555555555],
    'Yonne':                        [47.83972222222222, 3.5644444444444443],
    'Territoire de Belfort':        [47.63166666666667, 6.9286111111111115],
    'Essonne':                      [48.52222222222222, 2.243055555555556],
    'Hauts-de-Seine':               [48.84722222222222, 2.2458333333333336],
    'Seine-Saint-Denis':            [48.9175, 2.4780555555555557],
    'Val-de-Marne':                 [48.777499999999996, 2.468888888888889],
    "Val-d'Oise":                   [49.08277777777778, 2.131111111111111]
    }

Resultats = {dept: {'Departement': dept} for dept in Departements.keys()}

for Index_fichier in range(14):
    Chemin_Fichier = f"TIPE/Partie_2/Solaire/Données/{Index_fichier}.txt"

    with open(Chemin_Fichier, 'r') as file:
        Donnees_geo = json.load(file)

    for department, (dep_lat, dep_lon) in Departements.items():
        Plus_Proche = None
        min_distance = float('inf')

        for coords, donnee in Donnees_geo.items():
            geo_lat = float(donnee['lat'])
            geo_lon = float(donnee['lon'])
            
            distance = ((dep_lat - geo_lat) ** 2 + (dep_lon - geo_lon) ** 2) ** 0.5

            if distance < min_distance:
                min_distance = distance
                Plus_Proche = donnee

        if Plus_Proche:
            Resultats[department][f"wh_by_kwc_{Index_fichier}"] = Plus_Proche['wh_by_kwc']


df = pd.DataFrame(Resultats.values())
df.to_excel("TIPE/Partie_2/Solaire/output.xlsx", index=False)